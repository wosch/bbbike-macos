#!/opt/local/bin/perl 
# -*- perl -*-

use XML::LibXML::Reader;
use IO::File;

use strict;
use warnings;

use vars qw($VERSION);
$VERSION = 0.1;

use Data::Dumper;
use Getopt::Long;

my $debug = 1;    # 0: quiet, 1: normal, 2: verbose
my $v;
my $xmlparser;

sub usage () {
    <<EOF;
usage: $0 [--debug={0..2}] osm_file

-v                Show parser progress
--debug=0..2	  debug option
osmfile ...       Files downloaded by downloadosm,
                  or directory containing .osm files
EOF
}

GetOptions(
    "v"       => \$v,
    "debug=i" => \$debug,
) or die usage;

my @osm_files = @ARGV;
usage if !@osm_files;

sub extract_nodes {
    my $reader = shift;

    do {
        if ( $reader->name eq 'node' ) {
            my $id  = $reader->getAttribute('id');
            my $lat = $reader->getAttribute('lat');
            my $lon = $reader->getAttribute('lon');

            print $id, "\t", $lon, "\t", $lat, "\n";
        }

    } while ( $reader->nextElement == 1 );
}

######################################################################
#
# main
#

my $reader;
my $fh;
for my $osm_file (@osm_files) {
	
    if ($osm_file =~ m{\.bz2$}) { 
	open $fh, "-|", "bunzip2", "--stdout", $osm_file
            or die "Can't run bunzip2 on $osm_file: $!";
    } elsif ($osm_file eq '-') {
	$fh = \*STDIN;
    } 


    $reader = XML::LibXML::Reader->new( IO => $fh );
    #my $reader = XML::LibXML::Reader->new( location => $osm_file );

    # check if osm file
    $reader->nextElement;
    if ( $reader->name ne 'osm' ) {
        die
"The file '$osm_file' is not starting with a <osm> tag, probably not an osm file?";
    }

    extract_nodes($reader);
}

