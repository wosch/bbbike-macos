#!/usr/bin/perl

use Getopt::Long;
use utf8;

use strict;
use warnings;

sub unicode2ascii {
    my $string = shift;

    my @list;
    my $s;

    ############################################
    # German
    $s = $string;

    $s =~ s/Ä/Ae/g;
    $s =~ s/Ö/Oe/g;
    $s =~ s/Ü/Ue/g;
    $s =~ s/ä/ae/g;
    $s =~ s/ö/oe/g;
    $s =~ s/ü/ue/g;
    $s =~ s/ß/ss/g;
    $s =~ s/é/e/g;
    $s =~ s/è/e/g;
    $s =~ s/á/a/g;

    push( @list, $s ) if $s ne $string;

    ############################################
    # English
    $s = $string;

    $s =~ s/Ä/A/g;
    $s =~ s/Ö/O/g;
    $s =~ s/Ü/U/g;
    $s =~ s/ä/a/g;
    $s =~ s/ö/o/g;
    $s =~ s/ü/u/g;
    $s =~ s/ß/B/g;
    $s =~ s/é/e/g;

    push( @list, $s ) if $s ne $string;

    ############################################
    # slavic languages (polish, croatian, czech)
    $s = $string;

    $s =~ s,á,a,g;
    $s =~ s,ó,o,g;
    $s =~ s,Ć,C,g;
    $s =~ s,Č,C,g;
    $s =~ s,Đ,D,g;
    $s =~ s,Ł,L,g;
    $s =~ s,Ś,S,g;
    $s =~ s,Š,S,g;
    $s =~ s,Ź,Z,g;
    $s =~ s,Ż,Z,g;
    $s =~ s,ć,c,g;
    $s =~ s,č,c,g;
    $s =~ s,đ,d,g;
    $s =~ s,ę,e,g;
    $s =~ s,ł,l,g;
    $s =~ s,ń,n,g;
    $s =~ s,ą,q,g;
    $s =~ s,ś,s,g;
    $s =~ s,š,s,g;
    $s =~ s,Ź,z,g;
    $s =~ s,ź,z,g;
    $s =~ s,ż,z,g;
    $s =~ s,Ž,z,g;
    $s =~ s,ž,z,g;

    push( @list, $s ) if $s ne $string;

    ############################################
    # spanish
    $s = $string;

    $s =~ s,À,A,g;
    $s =~ s,Ò,o,g;
    $s =~ s,à,a,g;
    $s =~ s,á,a,g;
    $s =~ s,ç,c,g;
    $s =~ s,è,e,g;
    $s =~ s,é,e,g;
    $s =~ s,ë,e,g;
    $s =~ s,ì,i,g;
    $s =~ s,í,i,g;
    $s =~ s,ï,i,g;
    $s =~ s,ñ,n,g;
    $s =~ s,ò,o,g;
    $s =~ s,ó,o,g;
    $s =~ s,ú,u,g;
    $s =~ s,ü,u,g;

    push( @list, $s ) if $s ne $string;

    ############################################
    # danish
    $s = $string;

    $s =~ s,Å,A,g;
    $s =~ s,Æ,A,g;
    $s =~ s,Ø,O,g;
    $s =~ s,ä,a,g;
    $s =~ s,å,a,g;
    $s =~ s,æ,a,g;
    $s =~ s,é,e,g;
    $s =~ s,ø,o,g;

    push( @list, $s ) if $s ne $string;

    # return unique list
    my %hash = map { $_ => 1 } @list;
    @list = keys %hash;

    return @list;
}

sub usage {
    warn
"usage: [--input-charset=iso-8859-1] < data/strassen > data/opensearch.streetnames\n";
    warn "       [--debug=0..2] [--help]\n";
    exit(1);
}

my $debug    = 0;
my $icharset = 'utf8';
my $help;

my $rc = GetOptions(
    "debug=i"         => \$debug,
    "input-charset=s" => \$icharset,
    "help"            => \$help,
);

&usage if !$rc || $help;

binmode( \*STDIN,  ":encoding($icharset)" ) or die "binmode: $!\n";
binmode( \*STDOUT, ":encoding(utf8)" )      or die "binmode: $!\n";

my %s;
while (<STDIN>) {
    if ( /^\s*#/ || /^\(/ ) {
        next;
    }

    chomp;
    my $street = ( split(/\t/) )[0];
    $s{$street} = 1 if $street;
}

foreach my $street ( sort keys %s ) {
    if ( my @strings = unicode2ascii($street) ) {
        foreach my $s (@strings) {
            print $s, "\t", $street, "\n";
        }
    }
    else {
        print "$street\n";
    }
}

